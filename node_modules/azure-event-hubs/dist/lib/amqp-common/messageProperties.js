"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
const log = require("./log");
/**
 * Describes the operations that can be performed on the amqp message properties.
 * @module MessageProperties
 */
var MessageProperties;
(function (MessageProperties) {
    /**
     * Converts MessageProperties to AmqpMessageProperties.
     * @param {MessageProperties} props Message properties.
     * @returns {AmqpMessageProperties} AmqpMessageProperties.
     */
    function toAmqpMessageProperties(props) {
        const amqpProperties = {
            absolute_expiry_time: props.absoluteExpiryTime,
            content_encoding: props.contentEncoding,
            content_type: props.contentType,
            correlation_id: props.correlationId,
            creation_time: props.creationTime,
            group_id: props.groupId,
            group_sequence: props.groupSequence,
            message_id: props.messageId,
            reply_to: props.replyTo,
            reply_to_group_id: props.replyToGroupId,
            subject: props.subject,
            to: props.to,
            user_id: props.userId
        };
        log.msgProperties("To AmqpMessageProperties: %O", amqpProperties);
        return amqpProperties;
    }
    MessageProperties.toAmqpMessageProperties = toAmqpMessageProperties;
    /**
     * Converts AmqpMessageProperties to MessageProperties.
     * @param {AmqpMessageProperties} props Amqp message properties.
     * @returns {MessageProperties} MessageProperties.
     */
    function fromAmqpMessageProperties(props) {
        const msgProperties = {
            absoluteExpiryTime: props.absolute_expiry_time,
            contentEncoding: props.content_encoding,
            contentType: props.content_type,
            correlationId: props.correlation_id,
            creationTime: props.creation_time,
            groupId: props.group_id,
            groupSequence: props.group_sequence,
            messageId: props.message_id,
            replyTo: props.reply_to,
            replyToGroupId: props.reply_to_group_id,
            subject: props.subject,
            to: props.to,
            userId: props.user_id
        };
        log.msgProperties("From AmqpMessageProperties: %O", msgProperties);
        return msgProperties;
    }
    MessageProperties.fromAmqpMessageProperties = fromAmqpMessageProperties;
})(MessageProperties = exports.MessageProperties || (exports.MessageProperties = {}));
//# sourceMappingURL=messageProperties.js.map